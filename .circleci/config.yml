version: 2.1
orbs:
  docker: circleci/docker@2.6.0
jobs:
  build_and_push:
    executor:
      name: "docker/docker"
    environment:
      DOCKER_LOGIN: admin
      DOCKER_PASSWORD: admin
    steps:
      - checkout
      - run:
          name: Generate deployed version
          command: |
            mkdir -p /tmp/workspace
            export APP_VERSION=$(cat composer.lock | grep -A1 \"drupal/core\" | grep \"version\" | cut -d ':' -f 2 | sed "s/[\", ]//g")
            export DATETIME=$(date "+%Y%m%d%H%M")
            export GIT_SHORT_HASH=$(git rev-parse --short HEAD)
            export GIT_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD | sed -e 's/\//-/g' | sed -e 's/_/-/g')
            echo "export GIT_BRANCH_NAME=$GIT_BRANCH_NAME" >> /tmp/workspace/env-vars
            echo export TAG="${GIT_BRANCH_NAME}-$DATETIME-${APP_VERSION}-${GIT_SHORT_HASH}" >> /tmp/workspace/env-vars
            cat /tmp/workspace/env-vars >> $BASH_ENV
      - setup_remote_docker
      - docker/check:
          registry: registry.library.oregonstate.edu
      - docker/build:
          registry: registry.library.oregonstate.edu
          image: osulp_library
          extra_build_args: '--target=production --build-arg=COMPOSER_AUTH="${COMPOSER_AUTH}"'
          tag: $TAG,${GIT_BRANCH_NAME}-latest
      - docker/build:
          registry: registry.library.oregonstate.edu
          image: osulp_library
          extra_build_args: '--target=development --build-arg=COMPOSER_AUTH="${COMPOSER_AUTH}"'
          tag: ${TAG}-staging,${GIT_BRANCH_NAME}-staging-latest
      - docker/push:
          registry: registry.library.oregonstate.edu
          image: osulp_library
          tag: $TAG,${GIT_BRANCH_NAME}-latest,${TAG}-staging,${GIT_BRANCH_NAME}-staging-latest
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - env-vars
workflows:
  ci:
    jobs:
      - build_and_push:
          filters:
            branches:
              only:
                - main
                - /infra\/.*/
                - /staging\/.*/
